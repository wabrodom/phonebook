name:  Deployment pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env: 
  PR_IS_MERGED: ${{ github.event_name == 'push' }}

jobs:
  built_and_test:
    name: build and test
    runs-on: ubuntu-latest
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    env:
      TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      SECRET: ${{ secrets.SECRET}}
      PORT_FOR_TEST: ${{ secrets.PORT_FOR_TEST }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci
          cd ./client
          npm ci

      - name: Build
        run: npm run build:ui
      
      - name: Check style
        run: npm run lint

      - name: Test backend
        run: npm run test
        env: 
          TEST_MONGODB_URI: ${{env.TEST_MONGODB_URI}}
          PORT_FOR_TEST: ${{ env.PORT_FOR_TEST }}
          SECRET: ${{ env.SECRET}}

      - name: Install Playwright chromium Browsers
        run: npx playwright install --with-deps chromium

      - name: Test e2e Run Playwright tests on chromium
        run: npx playwright test --project=chromium
        env: 
          TEST_MONGODB_URI: ${{env.TEST_MONGODB_URI}}
          PORT_FOR_TEST: ${{ env.PORT_FOR_TEST }}
          SECRET: ${{ env.SECRET}}
      
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      # - name: upload build artifacts
      #   uses: actions/upload-artifact@v4
      #   with: 
      #     name: built_file
      #     path: dist/
      #     retention-days: 1
      #     overwrite: true

  deployment:
    needs: [built_and_test]
    if: ${{ needs.built_and_test.result == 'success' && github.event_name == 'push'}}
    name: Deploy app
    runs-on: ubuntu-latest
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci
          cd ./client
          npm ci
  
      - name: Build
        run: npm run build:ui

      # - name: Download build artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: built_file
      #     merge-multiple: false

      - name: Check PR_IS_MERGED value. if true should mean the pull is merged
        run: echo "PR_IS_MERGED=${{ env.PR_IS_MERGED }}"

      - name: use GitHub Action for flyctl 
        if: ${{ github.event_name == 'push' }}
        uses: superfly/flyctl-actions/setup-flyctl@master

      
      - name: Deploy to Fly.io
        if: ${{ github.event_name == 'push' }}
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  tag_release:
    needs: [built_and_test, deployment]
    if: needs.built_and_test.result == 'success' && needs.deployment.result == 'success'
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: check out
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        if: ${{ env.PR_IS_MERGED == true && !contains(join(github.event.commits.*.message), '#skip') }}
        uses: anothrNick/github-tag-action@a2c70ae13a881faf2b4953baaa9e49731997ab36
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          PR_IS_MERGED: ${{env.PR_IS_MERGED}}

  hello_world:
    needs: [tag_release]
    if: needs.tag_release.result == 'success'
    name:  using action in the same repository
    runs-on: ubuntu-20.04
    steps:
      - name: check out repository
        uses: actions/checkout@v4
      - name: use local hello world
        uses: ./.github/actions/hello_world_action
